openapi: 3.0.1
info:
  contact:
    email: dyrnq@outlook.com
    url: https://github.com/dyrnq
  description: springboot-httpbin
  title: springboot-httpbin
  version: 0.0.1
servers:
- url: https://httpbin.org/
tags:
- description: Testing different HTTP verbs
  name: HTTP Methods
- description: Auth methods
  name: Auth
- description: Generates responses with given status code
  name: Status codes
- description: Inspect the request data
  name: Request inspection
- description: Inspect the response data like caching and headers
  name: Response inspection
- description: Returns responses in different data formats
  name: Response formats
- description: Generates random and dynamic data
  name: Dynamic data
- description: "Creates, reads and deletes Cookies"
  name: Cookies
- description: Returns different image formats
  name: Images
- description: Returns different redirect responses
  name: Redirects
- description: Returns anything that is passed to request
  name: Anything
- description: Supports performance test related functionality
  name: Performance
paths:
  /absolute-redirect/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: Absolutely 302 Redirects n times.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
  /anything:
    delete:
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    get:
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    patch:
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    post:
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    put:
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
  /anything/{anything}:
    delete:
      parameters:
      - explode: false
        in: path
        name: anything
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    get:
      parameters:
      - explode: false
        in: path
        name: anything
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    patch:
      parameters:
      - explode: false
        in: path
        name: anything
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    post:
      parameters:
      - explode: false
        in: path
        name: anything
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
    put:
      parameters:
      - explode: false
        in: path
        name: anything
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Anything passed in request
      summary: Returns anything passed in request data.
      tags:
      - Anything
      x-accepts:
      - application/json
      x-tags:
      - tag: Anything
  /base64/{value}:
    get:
      parameters:
      - explode: false
        in: path
        name: value
        required: true
        schema:
          default: SFRUUEJJTiBpcyBhd2Vzb21l
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Decoded base64 content.
      summary: Decodes base64url-encoded string.
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /basic-auth/{user}/{passwd}:
    get:
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: passwd
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "401":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using HTTP Basic Auth.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /bearer:
    get:
      parameters:
      - explode: false
        in: header
        name: Authorization
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: token
        required: false
        schema:
          default: 3bsvhis2g6re31r0occao8i7ph
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "401":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using bearer authentication.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /brotli:
    get:
      responses:
        "200":
          content: {}
          description: Brotli-encoded data.
      summary: Returns Brotli-encoded data.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /bytes/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Bytes.
      summary: Returns n random bytes generated with given seed
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /cache:
    get:
      parameters:
      - explode: false
        in: header
        name: If-Modified-Since
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Cached response
        "304":
          content: {}
          description: Modified
      summary: Returns a 304 if an If-Modified-Since header or If-None-Match is present.
        Returns the same as a GET otherwise.
      tags:
      - Response inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Response inspection
  /cache/{value}:
    get:
      parameters:
      - explode: false
        in: path
        name: value
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Cache control set
      summary: Sets a Cache-Control header for n seconds.
      tags:
      - Response inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Response inspection
  /cookies:
    get:
      responses:
        "200":
          content: {}
          description: Set cookies.
      summary: Returns cookie data.
      tags:
      - Cookies
      x-accepts:
      - application/json
      x-tags:
      - tag: Cookies
  /cookies/delete:
    get:
      parameters:
      - allowEmptyValue: true
        explode: true
        in: query
        name: freeform
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: Redirect to cookie list
      summary: Deletes cookie(s) as provided by the query string and redirects to
        cookie list.
      tags:
      - Cookies
      x-accepts:
      - application/json
      x-tags:
      - tag: Cookies
  /cookies/set:
    get:
      parameters:
      - allowEmptyValue: true
        explode: true
        in: query
        name: freeform
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: Redirect to cookie list
      summary: Sets cookie(s) as provided by the query string and redirects to cookie
        list.
      tags:
      - Cookies
      x-accepts:
      - application/json
      x-tags:
      - tag: Cookies
  /cookies/set/{name}/{value}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Set cookies and redirects to cookie list.
      summary: Sets a cookie and redirects to cookie list.
      tags:
      - Cookies
      x-accepts:
      - application/json
      x-tags:
      - tag: Cookies
  /deflate:
    get:
      responses:
        "200":
          content: {}
          description: Defalte-encoded data.
      summary: Returns Deflate-encoded data.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /delay/{delay}:
    delete:
      parameters:
      - explode: false
        in: path
        name: delay
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
    get:
      parameters:
      - explode: false
        in: path
        name: delay
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
    patch:
      parameters:
      - explode: false
        in: path
        name: delay
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
    post:
      parameters:
      - explode: false
        in: path
        name: delay
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
    put:
      parameters:
      - explode: false
        in: path
        name: delay
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: A delayed response.
      summary: Returns a delayed response (max of 10 seconds).
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /delete:
    delete:
      responses:
        "200":
          content: {}
          description: The request's DELETE parameters.
      summary: The request's DELETE parameters.
      tags:
      - HTTP Methods
      x-accepts:
      - application/json
      x-tags:
      - tag: HTTP Methods
  /deny:
    get:
      responses:
        "200":
          content: {}
          description: Denied message
      summary: Returns page denied by robots.txt rules.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /digest-auth/{qop}/{user}/{passwd}:
    get:
      parameters:
      - description: auth or auth-int
        explode: false
        in: path
        name: qop
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: passwd
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "401":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using Digest Auth.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /digest-auth/{qop}/{user}/{passwd}/{algorithm}:
    get:
      parameters:
      - description: auth or auth-int
        explode: false
        in: path
        name: qop
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: passwd
        required: true
        schema:
          type: string
        style: simple
      - description: "MD5, SHA-256, SHA-512"
        explode: false
        in: path
        name: algorithm
        required: true
        schema:
          default: MD5
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "401":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using Digest Auth + Algorithm.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}:
    get:
      description: |
        allow settings the stale_after argument.
      parameters:
      - description: auth or auth-int
        explode: false
        in: path
        name: qop
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: passwd
        required: true
        schema:
          type: string
        style: simple
      - description: "MD5, SHA-256, SHA-512"
        explode: false
        in: path
        name: algorithm
        required: true
        schema:
          default: MD5
          type: string
        style: simple
      - explode: false
        in: path
        name: stale_after
        required: true
        schema:
          default: never
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "401":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using Digest Auth + Algorithm.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /drip:
    get:
      parameters:
      - description: The amount of time (in seconds) over which to drip each byte
        explode: true
        in: query
        name: duration
        required: false
        schema:
          default: 2.0
          type: number
        style: form
      - description: The number of bytes to respond with
        explode: true
        in: query
        name: numbytes
        required: false
        schema:
          default: 10
          type: integer
        style: form
      - description: The response code that will be returned
        explode: true
        in: query
        name: code
        required: false
        schema:
          default: 200
          type: integer
        style: form
      - description: The amount of time (in seconds) to delay before responding
        explode: true
        in: query
        name: delay
        required: false
        schema:
          default: 2.0
          type: number
        style: form
      responses:
        "200":
          content: {}
          description: A dripped response.
      summary: Drips data over a duration after an optional initial delay.
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /encoding/utf8:
    get:
      responses:
        "200":
          content: {}
          description: Encoded UTF-8 content.
      summary: Returns a UTF-8 encoded body.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /etag/{etag}:
    get:
      parameters:
      - explode: false
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: etag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Normal response
        "412":
          content: {}
          description: match
      summary: Assumes the resource has the given etag and responds to If-None-Match
        and If-Match headers appropriately.
      tags:
      - Response inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Response inspection
  /get:
    get:
      responses:
        "200":
          content: {}
          description: The request's query parameters.
      summary: The request's query parameters.
      tags:
      - HTTP Methods
      x-accepts:
      - application/json
      x-tags:
      - tag: HTTP Methods
  /gzip:
    get:
      responses:
        "200":
          content: {}
          description: GZip-encoded data.
      summary: Returns GZip-encoded data.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /headers:
    get:
      responses:
        "200":
          content: {}
          description: The request's headers.
      summary: Return the incoming request's HTTP headers.
      tags:
      - Request inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Request inspection
  /hidden-basic-auth/{user}/{passwd}:
    get:
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: passwd
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Sucessful authentication.
        "404":
          content: {}
          description: Unsuccessful authentication.
      summary: Prompts the user for authorization using HTTP Basic Auth.
      tags:
      - Auth
      x-accepts:
      - application/json
      x-tags:
      - tag: Auth
  /html:
    get:
      responses:
        "200":
          content: {}
          description: An HTML page.
      summary: Returns a simple HTML document.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /image:
    get:
      responses:
        "200":
          content:
            image/*: {}
          description: An image.
      summary: Returns a simple image of the type suggest by the Accept header.
      tags:
      - Images
      x-accepts:
      - image/*
      x-tags:
      - tag: Images
  /image/jpeg:
    get:
      responses:
        "200":
          content: {}
          description: A JPEG image.
      summary: Returns a simple JPEG image.
      tags:
      - Images
      x-accepts:
      - application/json
      x-tags:
      - tag: Images
  /image/png:
    get:
      responses:
        "200":
          content: {}
          description: A PNG image.
      summary: Returns a simple PNG image.
      tags:
      - Images
      x-accepts:
      - application/json
      x-tags:
      - tag: Images
  /image/svg:
    get:
      responses:
        "200":
          content: {}
          description: An SVG image.
      summary: Returns a simple SVG image.
      tags:
      - Images
      x-accepts:
      - application/json
      x-tags:
      - tag: Images
  /image/webp:
    get:
      responses:
        "200":
          content: {}
          description: A WEBP image.
      summary: Returns a simple WEBP image.
      tags:
      - Images
      x-accepts:
      - application/json
      x-tags:
      - tag: Images
  /ip:
    get:
      responses:
        "200":
          content: {}
          description: The Requester's IP Address.
      summary: Returns the requester's IP Address.
      tags:
      - Request inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Request inspection
  /json:
    get:
      responses:
        "200":
          content: {}
          description: An JSON document.
      summary: Returns a simple JSON document.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /links/{n}/{offset}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: offset
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: HTML links.
      summary: Generate a page containing n links to other pages which do the same.
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /patch:
    patch:
      responses:
        "200":
          content: {}
          description: The request's PATCH parameters.
      summary: The request's PATCH parameters.
      tags:
      - HTTP Methods
      x-accepts:
      - application/json
      x-tags:
      - tag: HTTP Methods
  /post:
    post:
      responses:
        "200":
          content: {}
          description: The request's POST parameters.
      summary: The request's POST parameters.
      tags:
      - HTTP Methods
      x-accepts:
      - application/json
      x-tags:
      - tag: HTTP Methods
  /put:
    put:
      responses:
        "200":
          content: {}
          description: The request's PUT parameters.
      summary: The request's PUT parameters.
      tags:
      - HTTP Methods
      x-accepts:
      - application/json
      x-tags:
      - tag: HTTP Methods
  /range/{numbytes}:
    get:
      parameters:
      - explode: false
        in: path
        name: numbytes
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Bytes.
      summary: "Streams n random bytes generated with given seed, at given chunk size\
        \ per packet."
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /redirect-to:
    delete:
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302/3XX Redirects to the given URL.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
    get:
      parameters:
      - explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status_code
        required: false
        schema:
          type: integer
        style: form
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302/3XX Redirects to the given URL.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
    patch:
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302/3XX Redirects to the given URL.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_redirect_to_put_request'
        required: true
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302/3XX Redirects to the given URL.
      tags:
      - Redirects
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
    put:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_redirect_to_put_request'
        required: true
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302/3XX Redirects to the given URL.
      tags:
      - Redirects
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
  /redirect/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: 302 Redirects n times.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
  /relative-redirect/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "302":
          content: {}
          description: A redirection.
      summary: Relatively 302 Redirects n times.
      tags:
      - Redirects
      x-accepts:
      - application/json
      x-tags:
      - tag: Redirects
  /response-headers:
    get:
      parameters:
      - allowEmptyValue: true
        explode: true
        in: query
        name: freeform
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: Response headers
      summary: Returns a set of response headers from the query string.
      tags:
      - Response inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Response inspection
    post:
      parameters:
      - allowEmptyValue: true
        explode: true
        in: query
        name: freeform
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: Response headers
      summary: Returns a set of response headers from the query string.
      tags:
      - Response inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Response inspection
  /robots.txt:
    get:
      responses:
        "200":
          content: {}
          description: Robots file
      summary: Returns some robots.txt rules.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /status/{codes}:
    delete:
      parameters:
      - explode: false
        in: path
        name: codes
        required: true
        schema:
          type: string
        style: simple
      responses:
        "100":
          content: {}
          description: Informational responses
        "200":
          content: {}
          description: Success
        "300":
          content: {}
          description: Redirection
        "400":
          content: {}
          description: Client Errors
        "500":
          content: {}
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
      x-accepts:
      - application/json
      x-tags:
      - tag: Status codes
    get:
      parameters:
      - explode: false
        in: path
        name: codes
        required: true
        schema:
          type: string
        style: simple
      responses:
        "100":
          content: {}
          description: Informational responses
        "200":
          content: {}
          description: Success
        "300":
          content: {}
          description: Redirection
        "400":
          content: {}
          description: Client Errors
        "500":
          content: {}
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
      x-accepts:
      - application/json
      x-tags:
      - tag: Status codes
    patch:
      parameters:
      - explode: false
        in: path
        name: codes
        required: true
        schema:
          type: string
        style: simple
      responses:
        "100":
          content: {}
          description: Informational responses
        "200":
          content: {}
          description: Success
        "300":
          content: {}
          description: Redirection
        "400":
          content: {}
          description: Client Errors
        "500":
          content: {}
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
      x-accepts:
      - application/json
      x-tags:
      - tag: Status codes
    post:
      parameters:
      - explode: false
        in: path
        name: codes
        required: true
        schema:
          type: string
        style: simple
      responses:
        "100":
          content: {}
          description: Informational responses
        "200":
          content: {}
          description: Success
        "300":
          content: {}
          description: Redirection
        "400":
          content: {}
          description: Client Errors
        "500":
          content: {}
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
      x-accepts:
      - application/json
      x-tags:
      - tag: Status codes
    put:
      parameters:
      - explode: false
        in: path
        name: codes
        required: true
        schema:
          type: string
        style: simple
      responses:
        "100":
          content: {}
          description: Informational responses
        "200":
          content: {}
          description: Success
        "300":
          content: {}
          description: Redirection
        "400":
          content: {}
          description: Client Errors
        "500":
          content: {}
          description: Server Errors
      summary: Return status code or random status code if more than one are given
      tags:
      - Status codes
      x-accepts:
      - application/json
      x-tags:
      - tag: Status codes
  /stream-bytes/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Bytes.
      summary: "Streams n random bytes generated with given seed, at given chunk size\
        \ per packet."
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /stream/{n}:
    get:
      parameters:
      - explode: false
        in: path
        name: "n"
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Streamed JSON responses.
      summary: Stream n JSON responses
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /user-agent:
    get:
      responses:
        "200":
          content: {}
          description: The request's User-Agent header.
      summary: Return the incoming requests's User-Agent header.
      tags:
      - Request inspection
      x-accepts:
      - application/json
      x-tags:
      - tag: Request inspection
  /uuid:
    get:
      responses:
        "200":
          content: {}
          description: A UUID4.
      summary: Return a UUID4.
      tags:
      - Dynamic data
      x-accepts:
      - application/json
      x-tags:
      - tag: Dynamic data
  /xml:
    get:
      responses:
        "200":
          content: {}
          description: An XML document.
      summary: Returns a simple XML document.
      tags:
      - Response formats
      x-accepts:
      - application/json
      x-tags:
      - tag: Response formats
  /performance/gc-pause:
    get:
      parameters:
      - description: The response time (in milliseconds) when not simulating a GC
          pause
        explode: true
        in: query
        name: response_time
        required: false
        schema:
          default: 100
          format: int64
          type: integer
        style: form
      - description: The repeating interval (in seconds) of the simulated GC pausse
        explode: true
        in: query
        name: interval_repetition
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The amount of time (in seconds) to block all requests during
          the simulated GC pause
        explode: true
        in: query
        name: interval_duration
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content: {}
          description: A non-delayed response.
        "202":
          content: {}
          description: A delayed response.
      summary: Simulates a repeated "stop the world" GC pause
      tags:
      - Performance
      x-accepts:
      - application/json
      x-tags:
      - tag: Performance
components:
  schemas:
    _redirect_to_put_request:
      properties:
        url:
          type: string
        status_code:
          type: integer
      required:
      - url
      type: object
x-original-swagger-version: "2.0"
